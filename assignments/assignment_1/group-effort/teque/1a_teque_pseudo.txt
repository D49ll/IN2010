proc push_back(x):
    i <- |A| + 1
    A[i] <- x
O(1)

proc push_front(x):
    i <- |A|
    while i > 0 do:
        A[i] <- A[i - 1]
        i <- i - 1
    A[i] <- x

O(n)    

proc push_middle(x):
    j <- |A|
    i <- (|A| + 1 )/ 2

    while j > i do:
        A[j] <- A[j - 1]
        j <- j - 1
    A[j] <- x

O(n/2) -> O(n)    

proc get(i):
    print(A[i])
O(1)


head <- 0
tail <- 0
mid <- 0

proc push_back(x):
    tail <- tail + 1
    A[tail] = x
    (mid pointer adjustment)
O(1)


proc push_front(x):
    head <- head - 1
    A[head] = x
    (mid pointer adjustment)
O(1)

proc push_middle(x):
    mid <- (tail - head) / 2
O(1)

proc get(i):
    print(A[i + head])
O(n)
